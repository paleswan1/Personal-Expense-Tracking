<div class="inner-padding">
    <div class="filter d-flex justify-content-between align-items-center mb-4 gap-3 flex-wrap">
        <div class="filter-left d-flex align-items-center gap-x-2">
            <MudTextField T="string" @bind-Value="Search" Immediate="true" Placeholder="Search" Variant="Variant.Text" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" Class="search-input text-dark" />
            <Filter OnFilterApplication="OnTransactionFilterHandler">
                <MudSelect T="Guid"
                           Label="Tags"
                           MultiSelection="true"
                           @bind-SelectedValues="FilterTagIdentifiers"
                           Variant="Variant.Text"
                           AnchorOrigin="Origin.BottomCenter"
                           ToStringFunc="@(id => Tags.FirstOrDefault(o => o.Id == id)?.Title ?? string.Empty)">
                    @foreach (var tag in Tags)
                    {
                        <MudSelectItem T="Guid" Value="@tag.Id">
                            @tag.Title
                        </MudSelectItem>
                    }
                </MudSelect>
                <MudDatePicker @bind-Date="StartDate"
                               Label="Start Date"
                               Variant="Variant.Text"
                               DateFormat="dd.MM.yyyy"
                               Placeholder="Select a Start Date"
                               PickerVariant="PickerVariant.Dialog" />
                <MudDatePicker @bind-Date="EndDate"
                               Label="End Date"
                               Variant="Variant.Text"
                               DateFormat="dd.MM.yyyy"
                               Placeholder="Select a End Date"
                               PickerVariant="PickerVariant.Dialog" />
            </Filter>
        </div>
        <div class="filter-right">
            <MudButton Color="Color.Primary" Variant="Variant.Filled" DropShadow="false" Class="btn btn--md" OnClick="OpenCloseInsertTransactionModal" StartIcon="@Icons.Material.Filled.Add" Disabled="IsInsertTransactionModalOpen">Add Transactions</MudButton>
            <MudButton Color="Color.Primary" Variant="Variant.Outlined" DropShadow="false" Class="btn btn--md" OnClick="ExportTransactionDetails" StartIcon="@Icons.Material.Filled.ImportExport">Export Transactions</MudButton>
            <MudChip T="string" Variant="Variant.Outlined" Class="status" Color="Color.Success">
                <span class="text-md">Balance: @Balance.ToString("C")</span>
            </MudChip>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table country-table" style="border-color: #ddd;">
            <thead>
                <tr>
                    <th>S.N.</th>
                    <th @onclick="() => ChangeSorting(nameof(GetTransactionDto.Title))" style="cursor: pointer;">
                        Title
                        <MudIcon Icon="@GetSortIcon(nameof(GetTransactionDto.Title))" Class="ms-1" />
                    </th>
                    <th @onclick="() => ChangeSorting(nameof(GetTransactionDto.Amount))" style="cursor: pointer;">
                        Amount
                        <MudIcon Icon="@GetSortIcon(nameof(GetTransactionDto.Amount))" Class="ms-1" />
                    </th>
                    <th>Type</th>
                    <th>Source</th>
                    <th @onclick="() => ChangeSorting(nameof(GetTransactionDto.Date))" style="cursor: pointer;">
                        Date
                        <MudIcon Icon="@GetSortIcon(nameof(GetTransactionDto.Date))" Class="ms-1" />
                    </th>
                    <th>Tags</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var transaction in TransactionModels)
                {
                    <tr>
                        <td>@(TransactionModels.IndexOf(transaction) + 1).</td>
                        <td>@transaction.Title</td>
                        <td>@transaction.Amount.ToString("C")</td>
                        <td>@transaction.Type</td>
                        <td>@transaction.Source</td>
                        <td>@transaction.Date</td>
                        <td>
                            @foreach (var item in transaction.Tags)
                            {
                                <span style="background-color: @item.BackgroundColor; color:  @item.TextColor; color: #fff; padding: 5px 10px; border-radius: 10px; display: inline-block; ">
                                    @item.Title
                                </span>
                            }
                        </td>
                        <td>
                            <MudIconButton Color="Color.Primary"
                                           Variant="Variant.Filled"
                                           Icon="@Icons.Material.Filled.Edit"
                                           OnClick="() => OpenCloseUpdateTransactionNoteModal(transaction.Id)"
                                           Disabled="IsUpdateTransactionNoteModalOpen"
                                           Class="btn-icon" />
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@if (IsInsertTransactionModalOpen)
{
    <ModalLayout Module="Transactions"
                 Size="lg"
                 Description="Please fill in the following form to insert your transaction record."
                 Title="Insert Transaction"
                 OnCancel="OpenCloseInsertTransactionModal">
        <EditForm Model="InsertTransactionModel" FormName="Insert Tag" OnSubmit="InsertTransaction">
            <DataAnnotationsValidator />
            <div class="mb-3">
                <MudTextField @bind-Value="InsertTransactionModel.Title"
                              Label="Title"
                              For="@(() => InsertTransactionModel.Title)"
                              Variant="Variant.Text"
                              Placeholder="Enter the Transaction Title"
                              Required="true"
                              Immediate="true" />
            </div>
            <div class="mb-3">
                <MudTextField @bind-Value="InsertTransactionModel.Amount"
                              Label="Amount"
                              For="@(() => InsertTransactionModel.Amount)"
                              Variant="Variant.Text"
                              Placeholder="Enter the Transaction Amount"
                              Required="true"
                              InputType="InputType.Number"
                              Immediate="true" />
            </div>
            <div class="mb-3">
                <MudTextField @bind-Value="InsertTransactionModel.Note"
                              Label="Note"
                              For="@(() => InsertTransactionModel.Note)"
                              Variant="Variant.Text"
                              Placeholder="Enter the Transaction Note"
                              Immediate="true"
                              Lines="3" />
            </div>
            <div class="mb-3">
                <MudSelect T="@(TransactionType)"
                           @bind-Value="InsertTransactionModel.Type"
                           Label="Type"
                           Required="true"
                           Variant="Variant.Text"
                           AnchorOrigin="Origin.BottomCenter">
                    <MudSelectItem Value="@(Domain.Common.Enum.TransactionType.None)">None</MudSelectItem>
                    <MudSelectItem Value="@(Domain.Common.Enum.TransactionType.Inflow)">Inflows</MudSelectItem>
                    <MudSelectItem Value="@(Domain.Common.Enum.TransactionType.Outflow)">Outflows</MudSelectItem>
                </MudSelect>
            </div>
            <div class="mb-3">
                <MudSelect T="@(TransactionSource)"
                           @bind-Value="InsertTransactionModel.Source"
                           Label="Source"
                           Required="true"
                           Variant="Variant.Text"
                           AnchorOrigin="Origin.BottomCenter"
                           Disabled="@(InsertTransactionModel.Type == Domain.Common.Enum.TransactionType.None)">
                    <MudSelectItem Value="@(TransactionSource.None)">None</MudSelectItem>
                    @if (InsertTransactionModel.Type == Domain.Common.Enum.TransactionType.Inflow)
                    {
                        <MudSelectItem Value="@(TransactionSource.Credit)">Credit</MudSelectItem>
                        <MudSelectItem Value="@(TransactionSource.Gain)">Gain</MudSelectItem>
                        <MudSelectItem Value="@(TransactionSource.Budget)">Budget</MudSelectItem>
                    }
                    else if (InsertTransactionModel.Type == Domain.Common.Enum.TransactionType.Outflow)
                    {
                        <MudSelectItem Value="@(TransactionSource.Debit)">Debit</MudSelectItem>
                        <MudSelectItem Value="@(TransactionSource.Spending)">Spending</MudSelectItem>
                        <MudSelectItem Value="@(TransactionSource.Expenses)">Expenses</MudSelectItem>
                    }
                </MudSelect>
            </div>
            <div class="mb-3">
                <MudSelect T="Guid"
                           Label="Tags"
                           MultiSelection="true"
                           @bind-SelectedValues="TagIdentifiers"
                           Variant="Variant.Text"
                           AnchorOrigin="Origin.BottomCenter"
                           ToStringFunc="@(id => Tags.FirstOrDefault(o => o.Id == id)?.Title ?? string.Empty)">
                    @foreach (var tag in Tags)
                    {
                        <MudSelectItem T="Guid" Value="@tag.Id">
                            @tag.Title
                        </MudSelectItem>
                    }
                </MudSelect>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-discard" @onclick="@OpenCloseInsertTransactionModal">Discard</button>
                <button type="submit" class="btn btn-submit">Submit</button>
            </div>
        </EditForm>
    </ModalLayout>
}

@if (IsUpdateTransactionNoteModalOpen)
{
    <ModalLayout Module="Transactions"
                 Size="lg"
                 Description="Please fill in the following form to update your transaction note."
                 Title="Update Transaction Note"
                 OnCancel="() => OpenCloseUpdateTransactionNoteModal(UpdateTransactionModel.Id)">
        <EditForm Model="UpdateTransactionModel" FormName="Update Note" OnSubmit="UpdateTransactionNote">
            <DataAnnotationsValidator />
            <div class="mb-3">  
                <MudTextField @bind-Value="UpdateTransactionModel.Note"
                              Label="Note"
                              For="@(() => UpdateTransactionModel.Note)"
                              Variant="Variant.Text"
                              Placeholder="Enter the Transaction Note"
                              Required="true"
                              Immediate="true"
                              Lines="3" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-discard" @onclick="() => OpenCloseUpdateTransactionNoteModal(UpdateTransactionModel.Id)">Discard</button>
                <button type="submit" class="btn btn-submit">Submit</button>
            </div>
        </EditForm>
    </ModalLayout>
}